service: myserverlessproject2

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs12.x
  profile: serverlessUser
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    tableName: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - sns:SetSMSAttributes
        - sns:Publish
        - ses:*
      Resource: "*"

custom:
  tableName: WebsocketUsers

functions:
  # Cronjob
  sendReminder:
    handler: lambdas/scheduleTasks/reminderEmail.handler
    events:
      - schedule: cron(0 9 ? * 7 *) # min, hours, day of month, day of the week (9am, no matter day of the month, every month, seventh day of the week, every single day)
  sendMorningNews:
    handler: lambdas/scheduleTasks/morningNews.handler
    events:
      - schedule: cron(15 7 ? * * *)

  # SMS
  sendSMS:
    handler: lambdas/endpoints/sendSMS.handler
    events:
      - http:
          path: send-sms
          method: POST
          cors: true

  # websocket
  websocket-connect:
    handler: lambdas/websockets/connect.handler
    events:
      - websocket:
          route: $connect # built-in routes
  websocket-disconnect:
    handler: lambdas/websockets/disconnect.handler
    events:
      - websocket:
          route: $disconnect
  websocket-default:
    handler: lambdas/websockets/default.handler
    events:
      - websocket:
          route: $default
  websocket-message:
    handler: lambdas/websockets/message.handler
    events:
      - websocket:
          route: message # route identifier

resources:
  Resources:
    WebSocketUserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
