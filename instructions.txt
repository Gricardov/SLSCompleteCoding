- Serverless config step:

1- Create an IAM user, "serverlessAccount".
2- Give programmatic acces and Attach policy directly, "Administration Access".
3- Copy Access key ID and Secret Access key
4- In terminal:
    > npm i -g serverless
    > serverless config credentials --provider aws --key <Access key ID> --secret <Secret Access key> --profile serverlessUser
5- Create a new serverless project, in terminal:
    > serverless create --template aws-nodejs --path myServerlessProject
6- Open serverless.yml and add "profile: serverlessUser" in profile.
7- Deploy with:
    > serverless deploy

npm installs:
serverless-s3-sync
serverless-webpack
webpack

Deploy with:
    > sls deploy

Deply only functions with:
    > sls deploy -f <function-name>

- For Amplify:
    > npm install -g @aws-amplify/cli
    > npx create-react-app <app-name>
    > amplify configure (be logged in as admin to setup IAM roles, etc)
    > amplify init
    > amplify add auth
    > amplify push
    > npm i --save aws-amplify @aws-amplify/ui-react

- Tutorial DB

For auto-managed MariaDB, set default charset and collation to utf8mb4 according to the table:
#1: https://mathiasbynens.be/notes/mysql-utf8mb4#utf8-to-utf8mb4

For cloud-managed MariaDB, just edit parameter groups according to the table above:
#2: https://aws.amazon.com/es/blogs/database/best-practices-for-configuring-parameters-for-amazon-rds-for-mysql-part-3-parameters-related-to-security-operational-manageability-and-connectivity-timeout/

https://stackoverflow.com/questions/51368663/flutter-fetched-japanese-character-from-server-decoded-wrong

- Test credentials:

admin
T...